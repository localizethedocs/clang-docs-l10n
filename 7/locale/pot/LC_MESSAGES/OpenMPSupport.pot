# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, The Clang Team
# This file is distributed under the same license as the Clang package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clang 7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 13:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../OpenMPSupport.rst:1
msgid ""
"<style type=\"text/css\">\n"
"  .none { background-color: #FFCCCC }\n"
"  .partial { background-color: #FFFF99 }\n"
"  .good { background-color: #CCFF99 }\n"
"</style>"
msgstr ""

#: ../../../OpenMPSupport.rst:18
msgid "OpenMP Support"
msgstr ""

#: ../../../OpenMPSupport.rst:20
msgid ""
"Clang fully supports OpenMP 4.5. Clang supports offloading to X86_64, "
"AArch64, PPC64[LE] and has `basic support for Cuda devices`_."
msgstr ""

#: ../../../OpenMPSupport.rst:24
msgid "Standalone directives"
msgstr ""

#: ../../../OpenMPSupport.rst:26
msgid "#pragma omp [for] simd: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:28
msgid ""
"#pragma omp declare simd: :partial:`Partial`.  We support parsing/semantic "
"analysis + generation of special attributes for X86 target, but still "
"missing the LLVM pass for vectorization."
msgstr ""

#: ../../../OpenMPSupport.rst:32
msgid "#pragma omp taskloop [simd]: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:34
msgid "#pragma omp target [enter|exit] data: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:36
msgid "#pragma omp target update: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:38
msgid "#pragma omp target: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:40
msgid "#pragma omp declare target: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:42
msgid "#pragma omp teams: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:44
msgid "#pragma omp distribute [simd]: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:46
msgid "#pragma omp distribute parallel for [simd]: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:49
msgid "Combined directives"
msgstr ""

#: ../../../OpenMPSupport.rst:51
msgid "#pragma omp parallel for simd: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:53
msgid "#pragma omp target parallel: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:55
msgid "#pragma omp target parallel for [simd]: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:57
msgid "#pragma omp target simd: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:59
msgid "#pragma omp target teams: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:61
msgid "#pragma omp teams distribute [simd]: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:63
msgid "#pragma omp target teams distribute [simd]: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:65
msgid "#pragma omp teams distribute parallel for [simd]: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:67
msgid ""
"#pragma omp target teams distribute parallel for [simd]: :good:`Complete`."
msgstr ""

#: ../../../OpenMPSupport.rst:69
msgid ""
"Clang does not support any constructs/updates from upcoming OpenMP 5.0 "
"except for `reduction`-based clauses in the `task` and `target`-based "
"directives."
msgstr ""

#: ../../../OpenMPSupport.rst:72
msgid ""
"In addition, the LLVM OpenMP runtime `libomp` supports the OpenMP Tools "
"Interface (OMPT) on x86, x86_64, AArch64, and PPC64 on Linux, Windows, and "
"mac OS. ows, and mac OS."
msgstr ""

#: ../../../OpenMPSupport.rst:79
msgid "Cuda devices support"
msgstr ""

#: ../../../OpenMPSupport.rst:82
msgid "Directives execution modes"
msgstr ""

#: ../../../OpenMPSupport.rst:84
msgid ""
"Clang code generation for target regions supports two modes: the SPMD and "
"non-SPMD modes. Clang chooses one of these two modes automatically based on "
"the way directives and clauses on those directives are used. The SPMD mode "
"uses a simplified set of runtime functions thus increasing performance at "
"the cost of supporting some OpenMP features. The non-SPMD mode is the most "
"generic mode and supports all currently available OpenMP features. The "
"compiler will always attempt to use the SPMD mode wherever possible. SPMD "
"mode will not be used if:"
msgstr ""

#: ../../../OpenMPSupport.rst:92
msgid ""
"The target region contains an `if()` clause that refers to a `parallel` "
"directive."
msgstr ""

#: ../../../OpenMPSupport.rst:95
msgid ""
"The target region contains a `parallel` directive with a `num_threads()` "
"clause."
msgstr ""

#: ../../../OpenMPSupport.rst:98
msgid ""
"The target region contains user code (other than OpenMP-specific directives) "
"in between the `target` and the `parallel` directives."
msgstr ""

#: ../../../OpenMPSupport.rst:102
msgid "Data-sharing modes"
msgstr ""

#: ../../../OpenMPSupport.rst:104
msgid ""
"Clang supports two data-sharing models for Cuda devices: `Generic` and "
"`Cuda` modes. The default mode is `Generic`. `Cuda` mode can give an "
"additional performance and can be activated using the `-fopenmp-cuda-mode` "
"flag. In `Generic` mode all local variables that can be shared in the "
"parallel regions are stored in the global memory. In `Cuda` mode local "
"variables are not shared between the threads and it is user responsibility "
"to share the required data between the threads in the parallel regions."
msgstr ""

#: ../../../OpenMPSupport.rst:113
msgid "Features not supported or with limited support for Cuda devices"
msgstr ""

#: ../../../OpenMPSupport.rst:115
msgid "Reductions across the teams are not supported yet."
msgstr ""

#: ../../../OpenMPSupport.rst:117
msgid "Cancellation constructs are not supported."
msgstr ""

#: ../../../OpenMPSupport.rst:119
msgid "Doacross loop nest is not supported."
msgstr ""

#: ../../../OpenMPSupport.rst:121
msgid "User-defined reductions are supported only for trivial types."
msgstr ""

#: ../../../OpenMPSupport.rst:123
msgid "Nested parallelism: inner parallel regions are executed sequentially."
msgstr ""

#: ../../../OpenMPSupport.rst:125
msgid ""
"Static linking of libraries containing device code is not supported yet."
msgstr ""

#: ../../../OpenMPSupport.rst:127
msgid ""
"Automatic translation of math functions in target regions to device-specific "
"math functions is not implemented yet."
msgstr ""

#: ../../../OpenMPSupport.rst:130
msgid "Debug information for OpenMP target regions is not supported yet."
msgstr ""
