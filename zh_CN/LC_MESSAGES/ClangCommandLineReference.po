# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, The Clang Team
# This file is distributed under the same license as the Clang package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clang 7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 13:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../ClangCommandLineReference.rst:9
msgid "Clang command line argument reference"
msgstr ""

#: ../../../ClangCommandLineReference.rst:14
msgid "Introduction"
msgstr ""

#: ../../../ClangCommandLineReference.rst:16
msgid ""
"This page lists the command line arguments currently supported by the GCC-"
"compatible ``clang`` and ``clang++`` drivers."
msgstr ""

#: ../../../ClangCommandLineReference.rst:23
msgid "Add <dir> to search path for binaries and object files used implicitly"
msgstr ""

#: ../../../ClangCommandLineReference.rst:27
msgid "Add directory to framework include search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:31
msgid "Treat source input files as Objective-C inputs"
msgstr ""

#: ../../../ClangCommandLineReference.rst:37
msgid "Treat source input files as Objective-C++ inputs"
msgstr ""

#: ../../../ClangCommandLineReference.rst:41
msgid "Do not emit metadata containing compiler name and version"
msgstr ""

#: ../../../ClangCommandLineReference.rst:45
msgid "Don't emit warning for unused driver arguments"
msgstr ""

#: ../../../ClangCommandLineReference.rst:49
msgid "Emit metadata containing compiler name and version"
msgstr ""

#: ../../../ClangCommandLineReference.rst:53
msgid "Pass the comma separated arguments in <arg> to the assembler"
msgstr ""

#: ../../../ClangCommandLineReference.rst:61
msgid "Pass <arg> to fatbinary invocation"
msgstr ""

#: ../../../ClangCommandLineReference.rst:65
msgid "Pass <arg> to the ptxas assembler"
msgstr ""

#: ../../../ClangCommandLineReference.rst:69
msgid "Pass <arg> to the target offloading toolchain."
msgstr ""

#: ../../../ClangCommandLineReference.rst:75
msgid "Pass <arg> to the target offloading toolchain identified by <triple>."
msgstr ""

#: ../../../ClangCommandLineReference.rst:87
msgid "Run the static analyzer"
msgstr ""

#: ../../../ClangCommandLineReference.rst:95
msgid ""
"Static analyzer report output format (html\\|plist\\|plist-multi-file\\|"
"plist-html\\|text)."
msgstr ""

#: ../../../ClangCommandLineReference.rst:111
msgid "Emit ARC errors even if the migrator can fix them"
msgstr ""

#: ../../../ClangCommandLineReference.rst:115
msgid "Output path for the plist report"
msgstr ""

#: ../../../ClangCommandLineReference.rst:129
msgid "Emit tables required for Windows Control Flow Guard."
msgstr ""

#: ../../../ClangCommandLineReference.rst:137
msgid "Specifies configuration file"
msgstr ""

#: ../../../ClangCommandLineReference.rst:145
msgid ""
"Compile CUDA code for both host and device (default).  Has no effect on non-"
"CUDA compilations."
msgstr ""

#: ../../../ClangCommandLineReference.rst:149
msgid "Compile CUDA code for device only"
msgstr ""

#: ../../../ClangCommandLineReference.rst:153
msgid "CUDA GPU architecture (e.g. sm\\_35).  May be specified more than once."
msgstr ""

#: ../../../ClangCommandLineReference.rst:157
msgid ""
"Compile CUDA code for host only.  Has no effect on non-CUDA compilations."
msgstr ""

#: ../../../ClangCommandLineReference.rst:161
msgid ""
"Include PTX for the follwing GPU architecture (e.g. sm\\_35) or 'all'. May "
"be specified more than once."
msgstr ""

#: ../../../ClangCommandLineReference.rst:165
msgid "Enable device-side debug info generation. Disables ptxas optimizations."
msgstr ""

#: ../../../ClangCommandLineReference.rst:173
msgid "Filename to write DOT-formatted header dependencies to"
msgstr ""

#: ../../../ClangCommandLineReference.rst:177
msgid "Filename (or -) to write dependency output to"
msgstr ""

#: ../../../ClangCommandLineReference.rst:199
msgid "Emit Clang AST files for source inputs"
msgstr ""

#: ../../../ClangCommandLineReference.rst:207
msgid "Use approximate transcendental functions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:211
msgid "Flush denormal floating point values to zero in CUDA device mode."
msgstr ""

#: ../../../ClangCommandLineReference.rst:215
msgid ""
"Generate relocatable device code, also known as separate compilation mode."
msgstr ""

#: ../../../ClangCommandLineReference.rst:219
msgid "Use 32-bit pointers for accessing const/local/shared address spaces."
msgstr ""

#: ../../../ClangCommandLineReference.rst:223
msgid "Reserve register r19 (Hexagon only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:231
msgid ""
"Specify comma-separated list of triples OpenMP offloading targets to be "
"supported"
msgstr ""

#: ../../../ClangCommandLineReference.rst:247
msgid ""
"Add -rpath with architecture-specific resource directory to the linker flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:251
msgid "Use the gcc toolchain at the given directory"
msgstr ""

#: ../../../ClangCommandLineReference.rst:255
msgid "Generate CodeView debug information"
msgstr ""

#: ../../../ClangCommandLineReference.rst:261
msgid "Display available options"
msgstr ""

#: ../../../ClangCommandLineReference.rst:265
msgid "Display help for hidden options"
msgstr ""

#: ../../../ClangCommandLineReference.rst:269
msgid "Link clang-offload-bundler bundles for HIP"
msgstr ""

#: ../../../ClangCommandLineReference.rst:275
msgid "Make the next included directory (-I or -F) an indexer header map"
msgstr ""

#: ../../../ClangCommandLineReference.rst:293
msgid "Run the migrator"
msgstr ""

#: ../../../ClangCommandLineReference.rst:303
msgid "Additional arguments to forward to LLVM's option processing"
msgstr ""

#: ../../../ClangCommandLineReference.rst:307
msgid "Directory to dump module dependencies to"
msgstr ""

#: ../../../ClangCommandLineReference.rst:323
msgid ""
"Don't error out if the detected version of the CUDA install is too low for "
"the requested CUDA gpu architecture."
msgstr ""

#: ../../../ClangCommandLineReference.rst:331
msgid "Disable builtin #include directories"
msgstr ""

#: ../../../ClangCommandLineReference.rst:359
msgid "Disable standard #include directories for the C++ standard library"
msgstr ""

#: ../../../ClangCommandLineReference.rst:371
msgid "Write output to <file>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:375
msgid "Make migration to 'atomic' properties"
msgstr ""

#: ../../../ClangCommandLineReference.rst:379
msgid "Enable migration to modern ObjC"
msgstr ""

#: ../../../ClangCommandLineReference.rst:383
msgid "Enable migration to property and method annotations"
msgstr ""

#: ../../../ClangCommandLineReference.rst:387
msgid ""
"Enable migration to infer NS\\_DESIGNATED\\_INITIALIZER for initializer "
"methods"
msgstr ""

#: ../../../ClangCommandLineReference.rst:391
msgid "Enable migration to infer instancetype for method result type"
msgstr ""

#: ../../../ClangCommandLineReference.rst:395
msgid "Enable migration to modern ObjC literals"
msgstr ""

#: ../../../ClangCommandLineReference.rst:399
msgid "Enable migration to NS\\_ENUM/NS\\_OPTIONS macros"
msgstr ""

#: ../../../ClangCommandLineReference.rst:403
msgid "Enable migration to modern ObjC property"
msgstr ""

#: ../../../ClangCommandLineReference.rst:407
msgid "Enable migration of setter/getter messages to property-dot syntax"
msgstr ""

#: ../../../ClangCommandLineReference.rst:411
msgid "Enable migration to add protocol conformance on classes"
msgstr ""

#: ../../../ClangCommandLineReference.rst:415
msgid "Enable migration to modern ObjC readonly property"
msgstr ""

#: ../../../ClangCommandLineReference.rst:419
msgid "Enable migration to modern ObjC readwrite property"
msgstr ""

#: ../../../ClangCommandLineReference.rst:423
msgid "Enable migration to modern ObjC subscripting"
msgstr ""

#: ../../../ClangCommandLineReference.rst:427
msgid ""
"Enable migration to use NS\\_NONATOMIC\\_IOSONLY macro for setting "
"property's 'atomic' attribute"
msgstr ""

#: ../../../ClangCommandLineReference.rst:431
msgid ""
"Enable migration to annotate property with NS\\_RETURNS\\_INNER\\_POINTER"
msgstr ""

#: ../../../ClangCommandLineReference.rst:435
msgid ""
"Only modify files with a filename contained in the provided directory path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:445
msgid "Enable mcount instrumentation"
msgstr ""

#: ../../../ClangCommandLineReference.rst:451
msgid "Use pipes between commands, when possible"
msgstr ""

#: ../../../ClangCommandLineReference.rst:465
msgid "Print the full library path of <file>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:469
msgid "Enable Objective-C Ivar layout bitmap print trace"
msgstr ""

#: ../../../ClangCommandLineReference.rst:473
msgid ""
"Print the library path for the currently used compiler runtime library "
"(\"libgcc.a\" or \"libclang\\_rt.builtins.\\*.a\")"
msgstr ""

#: ../../../ClangCommandLineReference.rst:481
msgid "Print the full program path of <name>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:485
msgid "Print the resource directory pathname"
msgstr ""

#: ../../../ClangCommandLineReference.rst:489
msgid "Print the paths used for finding libraries and programs"
msgstr ""

#: ../../../ClangCommandLineReference.rst:495
msgid "Support POSIX threads in generated code"
msgstr ""

#: ../../../ClangCommandLineReference.rst:505
msgid "Whether to build a relocatable precompiled header"
msgstr ""

#: ../../../ClangCommandLineReference.rst:511
msgid "Rewrite Legacy Objective-C source to C++"
msgstr ""

#: ../../../ClangCommandLineReference.rst:515
msgid "Compiler runtime library to use"
msgstr ""

#: ../../../ClangCommandLineReference.rst:519
msgid "Save llvm statistics."
msgstr ""

#: ../../../ClangCommandLineReference.rst:523
msgid "Save intermediate compilation results."
msgstr ""

#: ../../../ClangCommandLineReference.rst:561
msgid "Serialize compiler diagnostics to a file"
msgstr ""

#: ../../../ClangCommandLineReference.rst:585
msgid "C++ standard library to use"
msgstr ""

#: ../../../ClangCommandLineReference.rst:599
msgid "Generate code for the given target"
msgstr ""

#: ../../../ClangCommandLineReference.rst:603
msgid "Time individual commands"
msgstr ""

#: ../../../ClangCommandLineReference.rst:609
msgid "Enable some traditional CPP emulation"
msgstr ""

#: ../../../ClangCommandLineReference.rst:623
msgid "Show commands to run and use verbose output"
msgstr ""

#: ../../../ClangCommandLineReference.rst:627
msgid "Verify the binary representation of debug output"
msgstr ""

#: ../../../ClangCommandLineReference.rst:631
msgid "Print version information"
msgstr ""

#: ../../../ClangCommandLineReference.rst:635
msgid "Suppress all warnings"
msgstr ""

#: ../../../ClangCommandLineReference.rst:655
msgid "Resolve file paths relative to the specified directory"
msgstr ""

#: ../../../ClangCommandLineReference.rst:659
msgid "Treat subsequent input files as having type <language>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:664
msgid "Actions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:665
msgid "The action to perform on the input."
msgstr ""

#: ../../../ClangCommandLineReference.rst:669
msgid "Only run the preprocessor"
msgstr ""

#: ../../../ClangCommandLineReference.rst:673
msgid "Only run preprocess and compilation steps"
msgstr ""

#: ../../../ClangCommandLineReference.rst:677
msgid "Only run preprocess, compile, and assemble steps"
msgstr ""

#: ../../../ClangCommandLineReference.rst:681
msgid "Use the LLVM representation for assembler and object files"
msgstr ""

#: ../../../ClangCommandLineReference.rst:687
msgid "Provide information about a particular module file"
msgstr ""

#: ../../../ClangCommandLineReference.rst:691
msgid "Only precompile the input"
msgstr ""

#: ../../../ClangCommandLineReference.rst:695
msgid "Rewrite Objective-C source to C++"
msgstr ""

#: ../../../ClangCommandLineReference.rst:699
msgid "Load and verify that a pre-compiled header file is not stale"
msgstr ""

#: ../../../ClangCommandLineReference.rst:702
msgid "Compilation flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:704
msgid ""
"Flags controlling the behavior of Clang during compilation. These flags have "
"no effect during actions that do not perform compilation."
msgstr ""

#: ../../../ClangCommandLineReference.rst:709
msgid "Pass <arg> to the assembler"
msgstr ""

#: ../../../ClangCommandLineReference.rst:713
msgid "Pass <arg> to the clang compiler"
msgstr ""

#: ../../../ClangCommandLineReference.rst:717
msgid "Attempt to match the ABI of Clang <version>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:721
msgid ""
"Treat each comma separated argument in <arg> as a documentation comment "
"block command"
msgstr ""

#: ../../../ClangCommandLineReference.rst:725
msgid ""
"Require member pointer base types to be complete if they would be "
"significant under the Microsoft ABI"
msgstr ""

#: ../../../ClangCommandLineReference.rst:731
msgid "Allow \\_\\_declspec as a keyword"
msgstr ""

#: ../../../ClangCommandLineReference.rst:741
msgid "Print fix-its in machine parseable form"
msgstr ""

#: ../../../ClangCommandLineReference.rst:745
msgid "Print source range spans in numeric form"
msgstr ""

#: ../../../ClangCommandLineReference.rst:751
msgid "Discard value names in LLVM IR"
msgstr ""

#: ../../../ClangCommandLineReference.rst:755
msgid "Enables the experimental global instruction selector"
msgstr ""

#: ../../../ClangCommandLineReference.rst:759
msgid "Enables an experimental new pass manager in LLVM."
msgstr ""

#: ../../../ClangCommandLineReference.rst:763
msgid ""
"Use separate accesses for consecutive bitfield runs with legal widths and "
"alignments."
msgstr ""

#: ../../../ClangCommandLineReference.rst:767
msgid "Inline suitable functions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:771
msgid "Inline functions which are (explicitly or implicitly) marked inline"
msgstr ""

#: ../../../ClangCommandLineReference.rst:775
msgid ""
"Disable auto-generation of preprocessed source files and a script for "
"reproduction during a clang crash"
msgstr ""

#: ../../../ClangCommandLineReference.rst:779
msgid "Don't use blacklist file for sanitizers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:785
msgid "Level of field padding for AddressSanitizer"
msgstr ""

#: ../../../ClangCommandLineReference.rst:789
msgid "Enable linker dead stripping of globals in AddressSanitizer"
msgstr ""

#: ../../../ClangCommandLineReference.rst:793
msgid ""
"Enable poisoning array cookies when using class member operator new\\[\\] in "
"AddressSanitizer"
msgstr ""

#: ../../../ClangCommandLineReference.rst:797
msgid "Enable use-after-scope detection in AddressSanitizer"
msgstr ""

#: ../../../ClangCommandLineReference.rst:801
msgid "Path to blacklist file for sanitizers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:805
msgid "Enable control flow integrity (CFI) checks for cross-DSO calls."
msgstr ""

#: ../../../ClangCommandLineReference.rst:809
msgid "Generalize pointers in CFI indirect call type signature checks"
msgstr ""

#: ../../../ClangCommandLineReference.rst:813
msgid "Specify the type of coverage instrumentation for Sanitizers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:819
#: ../../../ClangCommandLineReference.rst:825
msgid "Enable origins tracking in MemorySanitizer"
msgstr ""

#: ../../../ClangCommandLineReference.rst:829
msgid "Enable use-after-destroy detection in MemorySanitizer"
msgstr ""

#: ../../../ClangCommandLineReference.rst:839
msgid "Enable recovery for specified sanitizers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:843
msgid "Enable sanitizer statistics gathering."
msgstr ""

#: ../../../ClangCommandLineReference.rst:847
msgid "Enable atomic operations instrumentation in ThreadSanitizer (default)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:851
msgid "Enable function entry/exit instrumentation in ThreadSanitizer (default)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:855
msgid "Enable memory access instrumentation in ThreadSanitizer (default)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:859
msgid "Enable trapping for specified sanitizers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:863
msgid ""
"Strip (or keep only, if negative) a given number of path components when "
"emitting check metadata."
msgstr ""

#: ../../../ClangCommandLineReference.rst:869
msgid ""
"Turn on runtime checks for various forms of undefined or suspicious "
"behavior. See user manual for available checks"
msgstr ""

#: ../../../ClangCommandLineReference.rst:873
msgid "Enable function outlining (AArch64 only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:879
msgid "Language standard to compile for"
msgstr ""

#: ../../../ClangCommandLineReference.rst:882
msgid "Preprocessor flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:884
msgid "Flags controlling the behavior of the Clang preprocessor."
msgstr ""

#: ../../../ClangCommandLineReference.rst:888
msgid "Include comments in preprocessed output"
msgstr ""

#: ../../../ClangCommandLineReference.rst:892
msgid "Include comments from within macros in preprocessed output"
msgstr ""

#: ../../../ClangCommandLineReference.rst:896
msgid "Define <macro> to <value> (or 1 if <value> omitted)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:900
msgid "Show header includes and nesting depth"
msgstr ""

#: ../../../ClangCommandLineReference.rst:904
msgid "Disable linemarker output in -E mode"
msgstr ""

#: ../../../ClangCommandLineReference.rst:908
msgid "Undefine macro <macro>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:912
msgid "Pass the comma separated arguments in <arg> to the preprocessor"
msgstr ""

#: ../../../ClangCommandLineReference.rst:916
msgid "Pass <arg> to the preprocessor"
msgstr ""

#: ../../../ClangCommandLineReference.rst:919
msgid "Include path management"
msgstr ""

#: ../../../ClangCommandLineReference.rst:921
msgid "Flags controlling how ``#include``\\s are resolved to files."
msgstr ""

#: ../../../ClangCommandLineReference.rst:925
msgid "Add directory to include search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:929
msgid ""
"Restrict all prior -I flags to double-quoted inclusion and remove current "
"directory from include path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:933
msgid "Ignore environment variables to detect CUDA installation"
msgstr ""

#: ../../../ClangCommandLineReference.rst:937
msgid "CUDA installation path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:941
msgid "Add directory to the C++ SYSTEM include search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:945
msgid "Use the last modification time of <file> as the build session timestamp"
msgstr ""

#: ../../../ClangCommandLineReference.rst:949
msgid "Time when the current build session started"
msgstr ""

#: ../../../ClangCommandLineReference.rst:953
msgid ""
"Specify the mapping of module name to precompiled module file, or load a "
"module file if name is omitted."
msgstr ""

#: ../../../ClangCommandLineReference.rst:957
msgid "Specify the module cache path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:961
msgid "Disable validation of the diagnostic options when loading the module"
msgstr ""

#: ../../../ClangCommandLineReference.rst:965
msgid ""
"Specify the interval (in seconds) after which a module file will be "
"considered unused"
msgstr ""

#: ../../../ClangCommandLineReference.rst:969
msgid ""
"Specify the interval (in seconds) between attempts to prune the module cache"
msgstr ""

#: ../../../ClangCommandLineReference.rst:973
msgid "Specify the module user build path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:977
msgid ""
"Don't verify input files for the modules if the module has been successfully "
"validated or loaded during this build session"
msgstr ""

#: ../../../ClangCommandLineReference.rst:981
msgid ""
"Validate the system headers that a module depends on when loading the module"
msgstr ""

#: ../../../ClangCommandLineReference.rst:985
msgid "Specify the prebuilt module path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:989
msgid "Add directory to AFTER include search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:993
msgid "Add directory to SYSTEM framework search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:997
msgid ""
"Add directory to SYSTEM framework search path, absolute paths are relative "
"to -isysroot"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1001
msgid "Include macros from file before parsing"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1005
msgid "Include file before parsing"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1009
msgid "Include precompiled header file"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1013
msgid "Set the -iwithprefix/-iwithprefixbefore prefix"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1017
msgid "Add directory to QUOTE include search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1021
msgid "Set the system root directory (usually /)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1025
msgid "Add directory to SYSTEM include search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1029
msgid "Add directory to end of the SYSTEM include search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1033
msgid ""
"Overlay the virtual filesystem described by file over the real file system"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1037
msgid "Set directory to SYSTEM include search path with prefix"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1041
msgid "Set directory to include search path with prefix"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1045
msgid ""
"Add directory to SYSTEM include search path, absolute paths are relative to -"
"isysroot"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1049
msgid "Path to ptxas (used for compiling CUDA code)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1053
msgid ""
"Treat all #include paths starting with <prefix> as including a system header."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1056
msgid "Dependency file generation"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1058
msgid ""
"Flags controlling generation of a dependency file for ``make``-like build "
"systems."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1063
msgid "Like -MD, but also implies -E and writes to stdout by default"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1067
msgid "Write a depfile containing user and system headers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1071
msgid "Write depfile output from -MMD, -MD, -MM, or -M to <file>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1075
msgid "Add missing headers to depfile"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1079
msgid "Write a compilation database entry per input"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1083
msgid "Like -MMD, but also implies -E and writes to stdout by default"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1087
msgid "Write a depfile containing user headers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1091
msgid "Create phony target for each dependency (other than main file)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1095
msgid "Specify name of main file output to quote in depfile"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1099
msgid "Specify name of main file output in depfile"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1103
msgid "Use NMake/Jom format for the depfile"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1106
msgid "Dumping preprocessor state"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1108
msgid ""
"Flags allowing the state of the preprocessor to be dumped in various ways."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1120
msgid "Print macro definitions in -E mode in addition to normal output"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1124
msgid "Print include directives in -E mode in addition to normal output"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1128
msgid "Print macro definitions in -E mode instead of normal output"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1131
msgid "Diagnostic flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1133
msgid ""
"Flags controlling which warnings, errors, and remarks Clang will generate. "
"See the :doc:`full list of warning and remark flags <DiagnosticsReference>`."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1138
msgid "Enable the specified remark"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1142
msgid ""
"Report transformation analysis from optimization passes whose name matches "
"the given POSIX regular expression"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1146
msgid ""
"Report missed transformations by optimization passes whose name matches the "
"given POSIX regular expression"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1150
msgid ""
"Report transformations performed by optimization passes whose name matches "
"the given POSIX regular expression"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1154
msgid "Enable the specified warning"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1158
msgid "Enable warnings for deprecated constructs and define \\_\\_DEPRECATED"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1163
msgid "Target-independent compilation options"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1174
msgid "Emit an address-significance table"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1186
msgid "Enable C++17 aligned allocation functions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1190
msgid "Treat editor placeholders as valid source code"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1198
msgid "Use ANSI escape codes for diagnostics"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1202
msgid "Use Apple's kernel extensions ABI"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1206
msgid "Enable Apple gcc-compatible #pragma pack handling"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1210
msgid "Restrict code to those available for App Extensions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1232
msgid "Enable the 'blocks' language feature"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1238
msgid "Accept non-standard constructs supported by the Borland compiler"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1246
msgid "Load the clang builtins module map file."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1252
msgid ""
"Instrument control-flow architecture protection. Options: return, branch, "
"full, none."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1256
msgid "Enable C++ builtin type char8\\_t"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1262
msgid "Use colors in diagnostics"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1280
msgid "Enable support for the C++ Coroutines TS"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1284
msgid "Generate coverage mapping to enable code coverage analysis"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1290
msgid "Enable C++ exceptions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1296
msgid "Place each data in its own section (ELF Only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1300
msgid "Emit extra debug info to make sample profile more accurate."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1304
msgid "Emit macro debug information"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1312
msgid "remap file source paths in debug info"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1316
msgid "Place debug types in their own section (ELF Only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1320
msgid "Parse templated function definitions at the end of the translation unit"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1324
msgid "Treat usage of null pointers as undefined behavior."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1330
msgid "Print absolute paths in diagnostics"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1340
msgid ""
"Prevent optimization remarks from being output if they do not have at least "
"this profile count"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1344
msgid "Enable profile hotness information in diagnostic line"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1348
msgid "Display include stacks for diagnostic notes"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1352
msgid "Print option name with mappable diagnostics"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1356
msgid "Print a template comparison tree for differing templates"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1360
msgid ""
"Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:"
"%:' (default)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1364
msgid "Allow '$' in identifiers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1368
msgid "Enable '\\[\\[\\]\\]' attributes in all C and C++ language modes"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1374
msgid "Use DWARF style exceptions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1382
msgid "Embed LLVM bitcode (option: off, all, bitcode, marker)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1386
msgid "Emit all declarations, even if unused"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1390
msgid "Use emutls functions to access thread\\_local variables"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1400
msgid "Enable support for exception handling"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1408
msgid "Allow aggressive, lossy floating-point optimizations"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1414
msgid "Enable fixed point types"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1420
msgid "Emits more virtual tables to improve devirtualization"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1424
msgid "Enable support for int128\\_t type"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1428
msgid ""
"Form fused FP ops (e.g. FMAs): fast (everywhere) \\| on (according to "
"FP\\_CONTRACT pragma, default) \\| off (never fuse)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1432
msgid "Assert that the compilation takes place in a freestanding environment"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1436
msgid "Place each function in its own section (ELF Only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1442
msgid "Allow GNU-extension keywords regardless of language standard"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1446
msgid "Generate output compatible with the standard GNU Objective-C runtime"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1450
msgid "Use the gnu89 inline semantics"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1460
msgid "Implicitly search the file system for module map files."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1468
msgid ""
"Instrument function entry only, after inlining, without arguments to the "
"instrumentation call"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1472
msgid "Generate calls to instrument function entry and exit"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1476
msgid "Like -finstrument-functions, but insert the calls after inlining"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1480
msgid "Enable the integrated assembler"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1490
msgid "Enable LTO in 'full' mode"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1494
msgid ""
"Controls the backend parallelism of -flto=thin (default of 0 means the "
"number of threads will be derived from the number of CPUs detected)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1500
msgid "Set LTO mode to either 'full' or 'thin'"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1506
msgid "Require math functions to indicate errors by setting errno"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1510
msgid ""
"Specify the maximum alignment to enforce on pointers lacking an explicit "
"alignment"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1514
msgid "Allow merging of constants"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1522
msgid "Load this module map file"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1526
msgid "Specify the name of the module to build"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1530
msgid "Enable the 'modules' language feature"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1534
msgid "Require declaration of modules used within a module"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1538
msgid ""
"Ignore the definition of the given macro when building and loading modules"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1542
msgid "Search even non-imported modules to resolve references"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1546
msgid "Like -fmodules-decluse but requires all headers to be in modules"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1550
msgid "Enable support for the C++ Modules TS"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1554
msgid "Enable full Microsoft Visual C++ compatibility"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1558
msgid ""
"Dot-separated value representing the Microsoft compiler version number to "
"report in \\_MSC\\_VER (0 = don't define it (default))"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1562
msgid "Accept some non-standard constructs supported by the Microsoft compiler"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1570
msgid ""
"Microsoft compiler version number to report in \\_MSC\\_VER (0 = don't "
"define it (default))"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1580
msgid ""
"Specifies the largest alignment guaranteed by '::operator new(size\\_t)'"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1586
msgid "Disable implicit builtin knowledge of a specific function"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1590
msgid "Do not elide types when printing diagnostics"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1596
msgid "Do not treat C++ operator name keywords as synonyms for operators"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1600
msgid "Control emission of RTTI data"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1612
msgid "Synthesize retain and release calls for Objective-C pointers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1616
msgid "Use EH-safe code when synthesizing retains and releases in -fobjc-arc"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1620
msgid "Enable Objective-C exceptions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1634
msgid "Specify the target Objective-C runtime kind and version"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1640
msgid "Enable ARC-style weak references in Objective-C"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1646
msgid "Parse OpenMP pragmas and generate parallel code."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1650
msgid "Emit OpenMP code only for SIMD-based constructs."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1662
msgid "Specify the file name of any generated YAML optimization record"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1674
msgid "Specify the default maximum struct packing alignment"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1678
msgid "Recognize and construct Pascal-style string literals"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1682
msgid "Override the default ABI to return all structs on the stack"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1692
msgid "Use the PLT to make function calls"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1696
msgid "Load the named plugin (dynamic shared object)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1706
msgid ""
"Generate instrumented code to collect execution counts into default.profraw "
"(overridden by LLVM\\_PROFILE\\_FILE env var)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1712
msgid ""
"Generate instrumented code to collect execution counts into <directory>/"
"default.profraw (overridden by LLVM\\_PROFILE\\_FILE env var)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1716
msgid ""
"Generate instrumented code to collect execution counts into default.profraw "
"file (overridden by '=' form of option or LLVM\\_PROFILE\\_FILE env var)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1722
msgid ""
"Generate instrumented code to collect execution counts into <file> "
"(overridden by LLVM\\_PROFILE\\_FILE env var)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1730
msgid "Use instrumentation data for profile-guided optimization"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1737
msgid "Specifies that the sample profile is accurate. If the sample"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1735
msgid ""
"profile is accurate, callsites without profile samples are marked as cold. "
"Otherwise, treat callsites without profile samples as if we have no profile"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1745
msgid "Enable sample-based profile guided optimizations"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1751
msgid ""
"Use instrumentation data for profile-guided optimization. If pathname is a "
"directory, it reads from <pathname>/default.profdata. Otherwise, it reads "
"from file <pathname>."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1755
msgid "Allow division operations to be reassociated"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1759
msgid "Override the default ABI to return small structs in registers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1763
msgid "Use atexit or \\_\\_cxa\\_atexit to register global destructors"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1767
msgid "Enable C++17 relaxed template template argument matching"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1771
msgid "Turn on loop reroller"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1793
msgid "Generate a YAML optimization record file"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1797
msgid "Use SEH style exceptions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1801
msgid ""
"Allocate to an enum type only as many bytes as it needs for the declared "
"range of possible values"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1805
msgid "Force wchar\\_t to be a short unsigned int"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1811
msgid ""
"Which overload candidates to show when overload resolution fails: best\\|"
"all; defaults to all"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1825
msgid "Enable C++14 sized global deallocation functions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1829
msgid "Use SjLj style exceptions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1833
msgid "Enable the superword-level parallelism vectorization passes"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1841
msgid ""
"Provide minimal debug info in the object/executable to facilitate online "
"symbolication/stack traces in the absence of .dwo/.dwp files when using "
"Split DWARF"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1847
msgid ""
"Enable stack protectors for functions potentially vulnerable to stack "
"smashing"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1851
msgid "Force the usage of stack protectors for all functions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1855
msgid "Use a strong heuristic to apply stack protectors to functions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1859
msgid "Emit section containing metadata on function stack sizes"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1863
msgid "Emit full debug info for all types used by the program"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1869
msgid ""
"Enable optimizations based on the strict definition of an enum's value range"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1873
msgid "Assume that overflowing float-to-int casts are undefined (default)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1879
msgid ""
"Always treat control flow paths that fall off the end of a non-void function "
"as unreachable"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1883
msgid ""
"Enable optimizations based on the strict rules for overwriting polymorphic C+"
"+ objects"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1899
msgid "Perform ThinLTO importing using provided function summary index"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1909
msgid "Issue call to specified function rather than a trap instruction"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1915
msgid "Trap on integer overflow"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1923
msgid "Specify the function to be called on overflow"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1927
msgid "Process trigraph sequences"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1931
msgid "Use unique names for text and data sections (ELF Only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1937
msgid "Turn on loop unroller"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1951
msgid "Use .init\\_array instead of .ctors"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1959
msgid "Use the given vector functions library"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1963
msgid "Enable the loop vectorization passes"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1969
msgid "Give inline C++ member functions hidden visibility by default"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1973
msgid ""
"Give global types 'default' visibility and global functions and variables "
"'hidden' visibility by default"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1977
msgid "Set the default symbol visibility for all global declarations"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1981
msgid "Enables whole-program vtable optimization. Requires -flto"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1985
msgid "Treat signed integer overflow as two's complement"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1989
msgid "Store string literals as writable data"
msgstr ""

#: ../../../ClangCommandLineReference.rst:1993
msgid ""
"Determine whether to always emit \\_\\_xray\\_customevent(...) calls even if "
"the function it appears in is not always instrumented."
msgstr ""

#: ../../../ClangCommandLineReference.rst:1997
msgid ""
"Determine whether to always emit \\_\\_xray\\_typedevent(...) calls even if "
"the function it appears in is not always instrumented."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2001
msgid ""
"DEPRECATED: Filename defining the whitelist for imbuing the 'always "
"instrument' XRay attribute."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2005
msgid ""
"Filename defining the list of functions/types for imbuing XRay attributes."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2013
msgid "Sets the minimum function size to instrument with XRay"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2017
msgid "Generate XRay instrumentation sleds on function entry and exit"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2021
msgid ""
"Select which XRay instrumentation points to emit. Options: all, none, "
"function, custom. Default is 'all'."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2025
msgid "Tells clang to add the link dependencies for XRay."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2029
msgid "List of modes to link in by default into XRay instrumented binaries."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2033
msgid ""
"DEPRECATED: Filename defining the whitelist for imbuing the 'never "
"instrument' XRay attribute."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2039
msgid "Enable System z vector language extension"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2046
msgid "OpenCL flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2049
msgid "OpenCL only. Allow denormals to be flushed to zero."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2053
msgid ""
"OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, "
"and defines \\_\\_FAST\\_RELAXED\\_MATH\\_\\_."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2057
msgid ""
"OpenCL only. Allow floating-point optimizations that assume arguments and "
"results are not NaNs or +-Inf."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2061
msgid ""
"OpenCL only. Specify that single precision floating-point divide and sqrt "
"used in the program source are correctly rounded."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2065
msgid "OpenCL only. Generate kernel argument metadata."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2069
msgid ""
"OpenCL only. Allow use of less precise MAD computations in the generated "
"binary."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2073
msgid ""
"OpenCL only. Allow use of less precise no signed zeros computations in the "
"generated binary."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2077
msgid ""
"OpenCL only. This option disables all optimizations. By default "
"optimizations are enabled."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2081
msgid ""
"OpenCL only. Treat double precision floating-point constant as single "
"precision constant."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2085
msgid "OpenCL language standard to compile for."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2089
msgid "OpenCL only. This option is added for compatibility with OpenCL 1.0."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2093
msgid ""
"OpenCL only. Defines that the global work-size be a multiple of the work-"
"group size specified to clEnqueueNDRangeKernel"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2097
msgid ""
"OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-"
"signed-zeros and -cl-mad-enable."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2100
msgid "Target-dependent compilation options"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2103
msgid ""
"Put objects of at most <size> bytes into small data section (MIPS / Hexagon)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2115
msgid "Align doubles to two words in structs (x86 only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2123
msgid "Link stack frames through backchain on System Z"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2133
msgid "Allow use of CRC instructions (ARM/Mips only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2143
msgid "Set EABI type, e.g. 4, 5 or gnu (default depends on triple)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2147
msgid "Insert calls to fentry at function entry (x86 only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2157
msgid "Enable merging of globals"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2165
msgid "Use Intel MCU ABI"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2173
msgid ""
"(integrated-as) Emit an object file which can be used with an incremental "
"linker"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2181
msgid ""
"Generate branches with extended addressability, usually via indirect jumps."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2185
msgid "Set Mac OS X deployment target"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2191
msgid ""
"Set the default structure layout to be compatible with the Microsoft "
"compiler standard"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2195
msgid "Omit frame pointer setup for leaf functions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2201
msgid "Use copy relocations support for PIE builds"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2205
msgid ""
"Specifies preferred vector width for auto-vectorization. Defaults to 'none' "
"which allows target specific decisions."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2209
msgid "Enable hexagon-qdsp6 backward compatibility"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2223
msgid "(integrated-as) Relax all machine instructions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2227
msgid "Make StdCall calling convention the default"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2231
msgid "Use software floating point"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2235
msgid "Set the stack alignment"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2239
msgid "Enable stack probes"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2243
msgid "Set the stack probe size"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2247
msgid "Force realign the stack at entry to every function"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2251
msgid "The thread model to use, e.g. posix, single (posix by default)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2274
msgid "AARCH64"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2277
msgid "Reserve the x18 register (AArch64 only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2281
msgid "Reserve the x20 register (AArch64 only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2285
msgid "Workaround Cortex-A53 erratum 835769 (AArch64 only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2289
msgid ""
"Generate code which only uses the general purpose registers (AArch64 only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2292
msgid "AMDGPU"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2295
msgid "Enable XNACK (AMDGPU only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2298
msgid "ARM"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2301
msgid "Reserve the r9 register (ARM only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2305
msgid "Disallow generation of data access to code sections (ARM only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2309
msgid "Disallow use of movt/movw pairs (ARM only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2313
msgid ""
"Disallow converting instructions with negative immediates to their negation "
"or inversion."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2317
msgid "Disallow use of CRC instructions (ARM only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2321
msgid ""
"Disallow generation of deprecated IT blocks for ARMv8. It is on by default "
"for ARMv8 Thumb mode."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2325
msgid "Read thread pointer from coprocessor register (ARM only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2329
msgid "Allow memory accesses to be unaligned (AArch32/AArch64 only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2332
#: ../../../ClangCommandLineReference.rst:2352
msgid "Hexagon"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2337
msgid "Enable generation of memop instructions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2341
msgid "Enable generation of new-value jumps"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2345
msgid "Enable generation of new-value stores"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2349
msgid "Enable generation of instruction packets"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2355
#: ../../../ClangCommandLineReference.rst:2365
msgid "Enable Hexagon Vector eXtensions"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2359
msgid "Set Hexagon Vector Length"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2368
msgid "MIPS"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2371
msgid "Enable SVR4-style position-independent code (Mips only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2387
msgid ""
"Place constants in the .rodata section instead of the .sdata section even if "
"they meet the -G <size> threshold (MIPS)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2391
msgid ""
"Assume that externally defined data is in the small data if it meets the -G "
"<size> threshold (MIPS)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2395
msgid "Use 32-bit floating point registers (MIPS only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2399
msgid "Use 64-bit floating point registers (MIPS only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2405
msgid ""
"Use GP relative accesses for symbols known to be in a small data section "
"(MIPS)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2409
msgid "Change indirect jump instructions to inhibit speculation"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2417
msgid "Extend the -G behaviour to object local data (MIPS)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2421
msgid ""
"Enable the generation of 4-operand madd.s, madd.d and related instructions."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2427
msgid "Enable MSA ASE (MIPS only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2431
msgid "Enable MT ASE (MIPS only)"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2444
msgid "PowerPC"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2482
msgid "WebAssembly"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2492
msgid "X86"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2648
msgid "RISCV"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2651
msgid "Enable linker relaxation"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2654
msgid "Optimization level"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2656
msgid "Flags controlling how much optimization should be performed."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2663
msgid "Debug information generation"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2665
msgid ""
"Flags controlling how much and what kind of debug information should be "
"generated."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2669
msgid "Kind and level of debug information"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2672
msgid "Generate source-level debug information"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2676
msgid "Generate source-level debug information with dwarf version 2"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2680
msgid "Generate source-level debug information with dwarf version 3"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2684
msgid "Generate source-level debug information with dwarf version 4"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2688
msgid "Generate source-level debug information with dwarf version 5"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2695
msgid "Debug level"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2712
msgid "Emit debug line number tables only"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2716
msgid ""
"Generate debug info with external references to clang modules or precompiled "
"headers"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2719
msgid "Debugger to tune debug information for"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2727
msgid "Debug information flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2734
msgid "Embed source text in DWARF debug sections"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2746
#: ../../../ClangCommandLineReference.rst:2752
msgid "DWARF debug sections compression type"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2755
msgid "Static analyzer flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2757
msgid "Flags controlling the behavior of the Clang Static Analyzer."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2761
msgid "Pass <arg> to the static analyzer"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2764
msgid "Fortran compilation flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2766
msgid ""
"Flags that will be passed onto the ``gfortran`` compiler when Clang is given "
"a Fortran input."
msgstr ""

#: ../../../ClangCommandLineReference.rst:2908
msgid "Linker flags"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2909
msgid "Flags that are passed on to the linker"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2913
msgid "Add directory to library search path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2919
msgid "Specify <script> as linker script"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2923
msgid "Set starting address of BSS to <addr>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2927
msgid "Set starting address of DATA to <addr>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2931
msgid "Set starting address of TEXT to <addr>"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2935
msgid "Pass the comma separated arguments in <arg> to the linker"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2941
msgid "Pass <arg> to the linker"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2953
msgid "HIP device library path"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2957
msgid "HIP device library"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2973
msgid "undef all system defines"
msgstr ""

#: ../../../ClangCommandLineReference.rst:2979
msgid "Pass -z <arg> to the linker"
msgstr ""
