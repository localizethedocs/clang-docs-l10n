# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, The Clang Team
# This file is distributed under the same license as the Clang package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clang 20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 13:41+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../Tooling.rst:3
msgid "Choosing the Right Interface for Your Application"
msgstr ""

#: ../../../Tooling.rst:5
msgid ""
"Clang provides infrastructure to write tools that need syntactic and "
"semantic information about a program.  This document will give a short "
"introduction of the different ways to write clang tools, and their pros and "
"cons."
msgstr ""

#: ../../../Tooling.rst:10
msgid "LibClang"
msgstr ""

#: ../../../Tooling.rst:12
msgid ""
"`LibClang <https://clang.llvm.org/doxygen/group__CINDEX.html>`_ is a stable "
"high level C interface to clang.  When in doubt LibClang is probably the "
"interface you want to use.  Consider the other interfaces only when you have "
"a good reason not to use LibClang."
msgstr ""

#: ../../../Tooling.rst:17
msgid "Canonical examples of when to use LibClang:"
msgstr ""

#: ../../../Tooling.rst:19
msgid "Xcode"
msgstr ""

#: ../../../Tooling.rst:20
msgid "Clang Python Bindings"
msgstr ""

#: ../../../Tooling.rst:22
msgid "Use LibClang when you...:"
msgstr ""

#: ../../../Tooling.rst:24
msgid "want to interface with clang from other languages than C++"
msgstr ""

#: ../../../Tooling.rst:25
msgid "need a stable interface that takes care to be backwards compatible"
msgstr ""

#: ../../../Tooling.rst:26
msgid ""
"want powerful high-level abstractions, like iterating through an AST with a "
"cursor, and don't want to learn all the nitty gritty details of Clang's AST."
msgstr ""

#: ../../../Tooling.rst:29
msgid "Do not use LibClang when you...:"
msgstr ""

#: ../../../Tooling.rst:31 ../../../Tooling.rst:74
msgid "want full control over the Clang AST"
msgstr ""

#: ../../../Tooling.rst:34
msgid "Clang Plugins"
msgstr ""

#: ../../../Tooling.rst:36
msgid ""
":doc:`Clang Plugins <ClangPlugins>` allow you to run additional actions on "
"the AST as part of a compilation.  Plugins are dynamic libraries that are "
"loaded at runtime by the compiler, and they're easy to integrate into your "
"build environment."
msgstr ""

#: ../../../Tooling.rst:41
msgid "Canonical examples of when to use Clang Plugins:"
msgstr ""

#: ../../../Tooling.rst:43
msgid "special lint-style warnings or errors for your project"
msgstr ""

#: ../../../Tooling.rst:44
msgid "creating additional build artifacts from a single compile step"
msgstr ""

#: ../../../Tooling.rst:46
msgid "Use Clang Plugins when you...:"
msgstr ""

#: ../../../Tooling.rst:48
msgid "need your tool to rerun if any of the dependencies change"
msgstr ""

#: ../../../Tooling.rst:49
msgid "want your tool to make or break a build"
msgstr ""

#: ../../../Tooling.rst:50
msgid "need full control over the Clang AST"
msgstr ""

#: ../../../Tooling.rst:52
msgid "Do not use Clang Plugins when you...:"
msgstr ""

#: ../../../Tooling.rst:54
msgid "want to run tools outside of your build environment"
msgstr ""

#: ../../../Tooling.rst:55
msgid ""
"want full control on how Clang is set up, including mapping of in-memory "
"virtual files"
msgstr ""

#: ../../../Tooling.rst:57
msgid ""
"need to run over a specific subset of files in your project which is not "
"necessarily related to any changes which would trigger rebuilds"
msgstr ""

#: ../../../Tooling.rst:61
msgid "LibTooling"
msgstr ""

#: ../../../Tooling.rst:63
msgid ""
":doc:`LibTooling <LibTooling>` is a C++ interface aimed at writing "
"standalone tools, as well as integrating into services that run clang "
"tools.  Canonical examples of when to use LibTooling:"
msgstr ""

#: ../../../Tooling.rst:67
msgid "a simple syntax checker"
msgstr ""

#: ../../../Tooling.rst:68
msgid "refactoring tools"
msgstr ""

#: ../../../Tooling.rst:70
msgid "Use LibTooling when you...:"
msgstr ""

#: ../../../Tooling.rst:72
msgid ""
"want to run tools over a single file, or a specific subset of files, "
"independently of the build system"
msgstr ""

#: ../../../Tooling.rst:75
msgid "want to share code with Clang Plugins"
msgstr ""

#: ../../../Tooling.rst:77
msgid "Do not use LibTooling when you...:"
msgstr ""

#: ../../../Tooling.rst:79
msgid "want to run as part of the build triggered by dependency changes"
msgstr ""

#: ../../../Tooling.rst:80
msgid ""
"want a stable interface so you don't need to change your code when the AST "
"API changes"
msgstr ""

#: ../../../Tooling.rst:82
msgid ""
"want high level abstractions like cursors and code completion out of the box"
msgstr ""

#: ../../../Tooling.rst:83
msgid "do not want to write your tools in C++"
msgstr ""

#: ../../../Tooling.rst:85
msgid ""
":doc:`Clang tools <ClangTools>` are a collection of specific developer tools "
"built on top of the LibTooling infrastructure as part of the Clang project. "
"They are targeted at automating and improving core development activities of "
"C/C++ developers."
msgstr ""

#: ../../../Tooling.rst:90
msgid ""
"Examples of tools we are building or planning as part of the Clang project:"
msgstr ""

#: ../../../Tooling.rst:92
msgid "Syntax checking (:program:`clang-check`)"
msgstr ""

#: ../../../Tooling.rst:93
msgid "Automatic fixing of compile errors (:program:`clang-fixit`)"
msgstr ""

#: ../../../Tooling.rst:94
msgid "Automatic code formatting (:program:`clang-format`)"
msgstr ""

#: ../../../Tooling.rst:95
msgid "Migration tools for new features in new language standards"
msgstr ""

#: ../../../Tooling.rst:96
msgid "Core refactoring tools"
msgstr ""
