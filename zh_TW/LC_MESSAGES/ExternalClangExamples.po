# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, The Clang Team
# This file is distributed under the same license as the Clang package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clang 8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 13:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../ExternalClangExamples.rst:3
msgid "External Clang Examples"
msgstr ""

#: ../../../ExternalClangExamples.rst:6
msgid "Introduction"
msgstr ""

#: ../../../ExternalClangExamples.rst:8
msgid ""
"This page provides some examples of the kinds of things that people have "
"done with Clang that might serve as useful guides (or starting points) from "
"which to develop your own tools. They may be helpful even for something as "
"banal (but necessary) as how to set up your build to integrate Clang."
msgstr ""

#: ../../../ExternalClangExamples.rst:13
msgid ""
"Clang's library-based design is deliberately aimed at facilitating use by "
"external projects, and we are always interested in improving Clang to better "
"serve our external users. Some typical categories of applications where "
"Clang is used are:"
msgstr ""

#: ../../../ExternalClangExamples.rst:18
msgid "Static analysis."
msgstr ""

#: ../../../ExternalClangExamples.rst:19
msgid "Documentation/cross-reference generation."
msgstr ""

#: ../../../ExternalClangExamples.rst:21
msgid ""
"If you know of (or wrote!) a tool or project using Clang, please send an "
"email to Clang's `development discussion mailing list <http://lists.llvm.org/"
"mailman/listinfo/cfe-dev>`_ to have it added. (or if you are already a Clang "
"contributor, feel free to directly commit additions). Since the primary "
"purpose of this page is to provide examples that can help developers, "
"generally they must have code available."
msgstr ""

#: ../../../ExternalClangExamples.rst:29
msgid "List of projects and tools"
msgstr ""

#: ../../../ExternalClangExamples.rst:34
msgid "`<https://github.com/Andersbakken/rtags/>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:32
msgid ""
"\"RTags is a client/server application that indexes c/c++ code and keeps a "
"persistent in-memory database of references, symbolnames, completions etc.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:37
msgid "`<http://rprichard.github.com/sourceweb/>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:37
msgid "\"A C/C++ source code indexer and navigator\""
msgstr ""

#: ../../../ExternalClangExamples.rst:41
msgid "`<https://github.com/etaoins/qconnectlint>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:40
msgid ""
"\"qconnectlint is a Clang tool for statically verifying the consistency of "
"signal and slot connections made with Qt's ``QObject::connect``.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:45
msgid "`<https://github.com/woboq/woboq_codebrowser>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:44
msgid ""
"\"The Woboq Code Browser is a web-based code browser for C/C++ projects. "
"Check out `<http://code.woboq.org/>`_ for an example!\""
msgstr ""

#: ../../../ExternalClangExamples.rst:49
msgid "`<https://github.com/mozilla/dxr>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:48
msgid ""
"\"DXR is a source code cross-reference tool that uses static analysis data "
"collected by instrumented compilers.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:52
msgid "`<https://github.com/eschulte/clang-mutate>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:52
msgid ""
"\"This tool performs a number of operations on C-language source files.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:58
msgid "`<https://github.com/gmarpons/Crisp>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:55
msgid ""
"\"A coding rule validation add-on for LLVM/clang. Crisp rules are written in "
"Prolog. A high-level declarative DSL to easily write new rules is under "
"development. It will be called CRISP, an acronym for *Coding Rules in "
"Sugared Prolog*.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:61
msgid "`<https://github.com/drothlis/clang-ctags>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:61
msgid "\"Generate tag file for C++ source code.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:64
msgid "`<https://github.com/exclipy/clang_indexer>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:64
msgid "\"This is an indexer for C and C++ based on the libclang library.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:67
msgid "`<https://github.com/holtgrewe/linty>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:67
msgid "\"Linty - C/C++ Style Checking with Python & libclang.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:70
msgid "`<https://github.com/axw/cmonster>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:70
msgid "\"cmonster is a Python wrapper for the Clang C++ parser.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:75
msgid "`<https://github.com/rizsotto/Constantine>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:73
msgid ""
"\"Constantine is a toy project to learn how to write clang plugin. "
"Implements pseudo const analysis. Generates warnings about variables, which "
"were declared without const qualifier.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:80
msgid "`<https://github.com/jessevdk/cldoc>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:78
msgid ""
"\"cldoc is a Clang based documentation generator for C and C++. cldoc tries "
"to solve the issue of writing C/C++ software documentation with a modern, "
"non-intrusive and robust approach.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:86
msgid "`<https://github.com/AlexDenisov/ToyClangPlugin>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:83
msgid ""
"\"The simplest Clang plugin implementing a semantic check for Objective-C. "
"This example shows how to use the ``DiagnosticsEngine`` (emit warnings, "
"errors, fixit hints).  See also `<http://l.rw.rw/clang_plugin>`_ for step-by-"
"step instructions.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:92
msgid "`<https://phabricator.kde.org/source/clazy>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:89
msgid ""
"\"clazy is a compiler plugin which allows clang to understand Qt semantics. "
"You get more than 50 Qt related compiler warnings, ranging from unneeded "
"memory allocations to misusage of API, including fix-its for automatic "
"refactoring.\""
msgstr ""

#: ../../../ExternalClangExamples.rst:99
msgid ""
"`<https://gerrit.libreoffice.org/gitweb?p=core.git;a=blob_plain;"
"f=compilerplugins/README;hb=HEAD>`_"
msgstr ""

#: ../../../ExternalClangExamples.rst:95
msgid ""
"\"LibreOffice uses a Clang plugin infrastructure to check during the build "
"various things, some more, some less specific to the LibreOffice source "
"code. There are currently around 50 such checkers, from flagging C-style "
"casts and uses of reserved identifiers to ensuring that code adheres to "
"lifecycle protocols for certain LibreOffice-specific classes.  They may "
"serve as examples for writing RecursiveASTVisitor-based plugins.\""
msgstr ""
