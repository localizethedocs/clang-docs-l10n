# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, The Clang Team
# This file is distributed under the same license as the Clang package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clang 11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 13:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../OpenMPSupport.rst:1
msgid ""
"<style type=\"text/css\">\n"
"  .none { background-color: #FFCCCC }\n"
"  .part { background-color: #FFFF99 }\n"
"  .good { background-color: #CCFF99 }\n"
"</style>"
msgstr ""

#: ../../../OpenMPSupport.rst:17
msgid "OpenMP Support"
msgstr ""

#: ../../../OpenMPSupport.rst:19
msgid ""
"Clang fully supports OpenMP 4.5. Clang supports offloading to X86_64, "
"AArch64, PPC64[LE] and has `basic support for Cuda devices`_."
msgstr ""

#: ../../../OpenMPSupport.rst:22
msgid ""
"#pragma omp declare simd: :part:`Partial`.  We support parsing/semantic "
"analysis + generation of special attributes for X86 target, but still "
"missing the LLVM pass for vectorization."
msgstr ""

#: ../../../OpenMPSupport.rst:26
msgid ""
"In addition, the LLVM OpenMP runtime `libomp` supports the OpenMP Tools "
"Interface (OMPT) on x86, x86_64, AArch64, and PPC64 on Linux, Windows, and "
"macOS."
msgstr ""

#: ../../../OpenMPSupport.rst:29
msgid ""
"For the list of supported features from OpenMP 5.0 see `OpenMP "
"implementation details`_."
msgstr ""

#: ../../../OpenMPSupport.rst:32
msgid "General improvements"
msgstr ""

#: ../../../OpenMPSupport.rst:33
msgid ""
"New collapse clause scheme to avoid expensive remainder operations. Compute "
"loop index variables after collapsing a loop nest via the collapse clause by "
"replacing the expensive remainder operation with multiplications and "
"additions."
msgstr ""

#: ../../../OpenMPSupport.rst:38
msgid ""
"The default schedules for the `distribute` and `for` constructs in a "
"parallel region and in SPMD mode have changed to ensure coalesced accesses. "
"For the `distribute` construct, a static schedule is used with a chunk size "
"equal to the number of threads per team (default value of threads or as "
"specified by the `thread_limit` clause if present). For the `for` construct, "
"the schedule is static with chunk size of one."
msgstr ""

#: ../../../OpenMPSupport.rst:46
msgid ""
"Simplified SPMD code generation for `distribute parallel for` when the new "
"default schedules are applicable."
msgstr ""

#: ../../../OpenMPSupport.rst:49
msgid ""
"When using the collapse clause on a loop nest the default behavior is to "
"automatically extend the representation of the loop counter to 64 bits for "
"the cases where the sizes of the collapsed loops are not known at compile "
"time. To prevent this conservative choice and use at most 32 bits, compile "
"your program with the `-fopenmp-optimistic-collapse`."
msgstr ""

#: ../../../OpenMPSupport.rst:59
msgid "Cuda devices support"
msgstr ""

#: ../../../OpenMPSupport.rst:62
msgid "Directives execution modes"
msgstr ""

#: ../../../OpenMPSupport.rst:64
msgid ""
"Clang code generation for target regions supports two modes: the SPMD and "
"non-SPMD modes. Clang chooses one of these two modes automatically based on "
"the way directives and clauses on those directives are used. The SPMD mode "
"uses a simplified set of runtime functions thus increasing performance at "
"the cost of supporting some OpenMP features. The non-SPMD mode is the most "
"generic mode and supports all currently available OpenMP features. The "
"compiler will always attempt to use the SPMD mode wherever possible. SPMD "
"mode will not be used if:"
msgstr ""

#: ../../../OpenMPSupport.rst:72
msgid ""
"The target region contains user code (other than OpenMP-specific directives) "
"in between the `target` and the `parallel` directives."
msgstr ""

#: ../../../OpenMPSupport.rst:76
msgid "Data-sharing modes"
msgstr ""

#: ../../../OpenMPSupport.rst:78
msgid ""
"Clang supports two data-sharing models for Cuda devices: `Generic` and "
"`Cuda` modes. The default mode is `Generic`. `Cuda` mode can give an "
"additional performance and can be activated using the `-fopenmp-cuda-mode` "
"flag. In `Generic` mode all local variables that can be shared in the "
"parallel regions are stored in the global memory. In `Cuda` mode local "
"variables are not shared between the threads and it is user responsibility "
"to share the required data between the threads in the parallel regions."
msgstr ""

#: ../../../OpenMPSupport.rst:88
msgid "Features not supported or with limited support for Cuda devices"
msgstr ""

#: ../../../OpenMPSupport.rst:90
msgid "Cancellation constructs are not supported."
msgstr ""

#: ../../../OpenMPSupport.rst:92
msgid "Doacross loop nest is not supported."
msgstr ""

#: ../../../OpenMPSupport.rst:94
msgid "User-defined reductions are supported only for trivial types."
msgstr ""

#: ../../../OpenMPSupport.rst:96
msgid "Nested parallelism: inner parallel regions are executed sequentially."
msgstr ""

#: ../../../OpenMPSupport.rst:98
msgid ""
"Static linking of libraries containing device code is not supported yet."
msgstr ""

#: ../../../OpenMPSupport.rst:100
msgid ""
"Automatic translation of math functions in target regions to device-specific "
"math functions is not implemented yet."
msgstr ""

#: ../../../OpenMPSupport.rst:103
msgid ""
"Debug information for OpenMP target regions is supported, but sometimes it "
"may be required to manually specify the address class of the inspected "
"variables. In some cases the local variables are actually allocated in the "
"global memory, but the debug info may be not aware of it."
msgstr ""

#: ../../../OpenMPSupport.rst:112
msgid "OpenMP 5.0 Implementation Details"
msgstr ""

#: ../../../OpenMPSupport.rst:114
msgid ""
"The following table provides a quick overview over various OpenMP 5.0 "
"features and their implementation status. Please contact *openmp-dev* at "
"*lists.llvm.org* for more information or if you want to help with the "
"implementation."
msgstr ""

#: ../../../OpenMPSupport.rst:120 ../../../OpenMPSupport.rst:263
msgid "Category"
msgstr ""

#: ../../../OpenMPSupport.rst:120 ../../../OpenMPSupport.rst:263
msgid "Feature"
msgstr ""

#: ../../../OpenMPSupport.rst:120 ../../../OpenMPSupport.rst:263
msgid "Status"
msgstr ""

#: ../../../OpenMPSupport.rst:120 ../../../OpenMPSupport.rst:263
msgid "Reviews"
msgstr ""

#: ../../../OpenMPSupport.rst:122 ../../../OpenMPSupport.rst:124
#: ../../../OpenMPSupport.rst:126 ../../../OpenMPSupport.rst:128
#: ../../../OpenMPSupport.rst:130 ../../../OpenMPSupport.rst:132
#: ../../../OpenMPSupport.rst:134 ../../../OpenMPSupport.rst:269
msgid "loop extension"
msgstr ""

#: ../../../OpenMPSupport.rst:122
msgid "support != in the canonical loop form"
msgstr ""

#: ../../../OpenMPSupport.rst:122 ../../../OpenMPSupport.rst:126
#: ../../../OpenMPSupport.rst:128 ../../../OpenMPSupport.rst:130
#: ../../../OpenMPSupport.rst:132 ../../../OpenMPSupport.rst:134
#: ../../../OpenMPSupport.rst:136 ../../../OpenMPSupport.rst:138
#: ../../../OpenMPSupport.rst:144 ../../../OpenMPSupport.rst:146
#: ../../../OpenMPSupport.rst:152 ../../../OpenMPSupport.rst:154
#: ../../../OpenMPSupport.rst:156 ../../../OpenMPSupport.rst:158
#: ../../../OpenMPSupport.rst:160 ../../../OpenMPSupport.rst:162
#: ../../../OpenMPSupport.rst:164 ../../../OpenMPSupport.rst:166
#: ../../../OpenMPSupport.rst:168 ../../../OpenMPSupport.rst:174
#: ../../../OpenMPSupport.rst:176 ../../../OpenMPSupport.rst:178
#: ../../../OpenMPSupport.rst:180 ../../../OpenMPSupport.rst:182
#: ../../../OpenMPSupport.rst:184 ../../../OpenMPSupport.rst:192
#: ../../../OpenMPSupport.rst:194 ../../../OpenMPSupport.rst:200
#: ../../../OpenMPSupport.rst:206 ../../../OpenMPSupport.rst:212
#: ../../../OpenMPSupport.rst:214 ../../../OpenMPSupport.rst:216
#: ../../../OpenMPSupport.rst:224 ../../../OpenMPSupport.rst:226
#: ../../../OpenMPSupport.rst:228 ../../../OpenMPSupport.rst:230
#: ../../../OpenMPSupport.rst:232 ../../../OpenMPSupport.rst:238
#: ../../../OpenMPSupport.rst:240 ../../../OpenMPSupport.rst:242
#: ../../../OpenMPSupport.rst:248 ../../../OpenMPSupport.rst:250
msgid ":good:`done`"
msgstr ""

#: ../../../OpenMPSupport.rst:122
msgid "D54441"
msgstr ""

#: ../../../OpenMPSupport.rst:124
msgid "#pragma omp loop (directive)"
msgstr ""

#: ../../../OpenMPSupport.rst:124 ../../../OpenMPSupport.rst:150
#: ../../../OpenMPSupport.rst:170 ../../../OpenMPSupport.rst:172
#: ../../../OpenMPSupport.rst:186 ../../../OpenMPSupport.rst:188
#: ../../../OpenMPSupport.rst:196 ../../../OpenMPSupport.rst:210
#: ../../../OpenMPSupport.rst:218 ../../../OpenMPSupport.rst:220
#: ../../../OpenMPSupport.rst:236 ../../../OpenMPSupport.rst:244
#: ../../../OpenMPSupport.rst:265 ../../../OpenMPSupport.rst:267
msgid ":part:`worked on`"
msgstr ""

#: ../../../OpenMPSupport.rst:126
msgid "collapse imperfectly nested loop"
msgstr ""

#: ../../../OpenMPSupport.rst:128
msgid "collapse non-rectangular nested loop"
msgstr ""

#: ../../../OpenMPSupport.rst:130
msgid "C++ range-base for loop"
msgstr ""

#: ../../../OpenMPSupport.rst:132
msgid "clause: if for SIMD directives"
msgstr ""

#: ../../../OpenMPSupport.rst:134
msgid "inclusive scan extension (matching C++17 PSTL)"
msgstr ""

#: ../../../OpenMPSupport.rst:136 ../../../OpenMPSupport.rst:138
msgid "memory mangagement"
msgstr ""

#: ../../../OpenMPSupport.rst:136
msgid "memory allocators"
msgstr ""

#: ../../../OpenMPSupport.rst:136
msgid "r341687,r357929"
msgstr ""

#: ../../../OpenMPSupport.rst:138
msgid "allocate directive and allocate clause"
msgstr ""

#: ../../../OpenMPSupport.rst:138
msgid "r355614,r335952"
msgstr ""

#: ../../../OpenMPSupport.rst:140
msgid "OMPD"
msgstr ""

#: ../../../OpenMPSupport.rst:140
msgid "OMPD interfaces"
msgstr ""

#: ../../../OpenMPSupport.rst:140 ../../../OpenMPSupport.rst:148
msgid ":part:`not upstream`"
msgstr ""

#: ../../../OpenMPSupport.rst:140
msgid "https://github.com/OpenMPToolsInterface/LLVM-openmp/tree/ompd-tests"
msgstr ""

#: ../../../OpenMPSupport.rst:142
msgid "OMPT"
msgstr ""

#: ../../../OpenMPSupport.rst:142
msgid "OMPT interfaces"
msgstr ""

#: ../../../OpenMPSupport.rst:142
msgid ":part:`mostly done`"
msgstr ""

#: ../../../OpenMPSupport.rst:144
msgid "thread affinity extension"
msgstr ""

#: ../../../OpenMPSupport.rst:146 ../../../OpenMPSupport.rst:148
#: ../../../OpenMPSupport.rst:150 ../../../OpenMPSupport.rst:152
#: ../../../OpenMPSupport.rst:154 ../../../OpenMPSupport.rst:156
#: ../../../OpenMPSupport.rst:158 ../../../OpenMPSupport.rst:160
#: ../../../OpenMPSupport.rst:162 ../../../OpenMPSupport.rst:164
msgid "task extension"
msgstr ""

#: ../../../OpenMPSupport.rst:146
msgid "taskloop reduction"
msgstr ""

#: ../../../OpenMPSupport.rst:148
msgid "task affinity"
msgstr ""

#: ../../../OpenMPSupport.rst:150
msgid "clause: depend on the taskwait construct"
msgstr ""

#: ../../../OpenMPSupport.rst:152
msgid "depend objects and detachable tasks"
msgstr ""

#: ../../../OpenMPSupport.rst:154
msgid "mutexinoutset dependence-type for tasks"
msgstr ""

#: ../../../OpenMPSupport.rst:154
msgid "D53380,D57576"
msgstr ""

#: ../../../OpenMPSupport.rst:156
msgid "combined taskloop constructs"
msgstr ""

#: ../../../OpenMPSupport.rst:158
msgid "master taskloop"
msgstr ""

#: ../../../OpenMPSupport.rst:160
msgid "parallel master taskloop"
msgstr ""

#: ../../../OpenMPSupport.rst:162
msgid "master taskloop simd"
msgstr ""

#: ../../../OpenMPSupport.rst:164
msgid "parallel master taskloop simd"
msgstr ""

#: ../../../OpenMPSupport.rst:166 ../../../OpenMPSupport.rst:168
msgid "SIMD extension"
msgstr ""

#: ../../../OpenMPSupport.rst:166
msgid "atomic and simd constructs inside SIMD code"
msgstr ""

#: ../../../OpenMPSupport.rst:168
msgid "SIMD nontemporal"
msgstr ""

#: ../../../OpenMPSupport.rst:170 ../../../OpenMPSupport.rst:172
#: ../../../OpenMPSupport.rst:174 ../../../OpenMPSupport.rst:176
#: ../../../OpenMPSupport.rst:178 ../../../OpenMPSupport.rst:180
#: ../../../OpenMPSupport.rst:182 ../../../OpenMPSupport.rst:184
#: ../../../OpenMPSupport.rst:186 ../../../OpenMPSupport.rst:188
#: ../../../OpenMPSupport.rst:190 ../../../OpenMPSupport.rst:192
#: ../../../OpenMPSupport.rst:194 ../../../OpenMPSupport.rst:196
#: ../../../OpenMPSupport.rst:198 ../../../OpenMPSupport.rst:200
#: ../../../OpenMPSupport.rst:202 ../../../OpenMPSupport.rst:204
#: ../../../OpenMPSupport.rst:206 ../../../OpenMPSupport.rst:208
#: ../../../OpenMPSupport.rst:210 ../../../OpenMPSupport.rst:212
#: ../../../OpenMPSupport.rst:214 ../../../OpenMPSupport.rst:216
#: ../../../OpenMPSupport.rst:218 ../../../OpenMPSupport.rst:220
#: ../../../OpenMPSupport.rst:222 ../../../OpenMPSupport.rst:271
msgid "device extension"
msgstr ""

#: ../../../OpenMPSupport.rst:170
msgid "infer target functions from initializers"
msgstr ""

#: ../../../OpenMPSupport.rst:172
msgid "infer target variables from initializers"
msgstr ""

#: ../../../OpenMPSupport.rst:174
msgid "OMP_TARGET_OFFLOAD environment variable"
msgstr ""

#: ../../../OpenMPSupport.rst:174
msgid "D50522"
msgstr ""

#: ../../../OpenMPSupport.rst:176
msgid "support full 'defaultmap' functionality"
msgstr ""

#: ../../../OpenMPSupport.rst:176
msgid "D69204"
msgstr ""

#: ../../../OpenMPSupport.rst:178
msgid "device specific functions"
msgstr ""

#: ../../../OpenMPSupport.rst:180
msgid "clause: device_type"
msgstr ""

#: ../../../OpenMPSupport.rst:182
msgid "clause: extended device"
msgstr ""

#: ../../../OpenMPSupport.rst:184
msgid "clause: uses_allocators clause"
msgstr ""

#: ../../../OpenMPSupport.rst:186
msgid "clause: in_reduction"
msgstr ""

#: ../../../OpenMPSupport.rst:186
msgid "r308768"
msgstr ""

#: ../../../OpenMPSupport.rst:188
msgid "omp_get_device_num()"
msgstr ""

#: ../../../OpenMPSupport.rst:188
msgid "D54342"
msgstr ""

#: ../../../OpenMPSupport.rst:190
msgid "structure mapping of references"
msgstr ""

#: ../../../OpenMPSupport.rst:190 ../../../OpenMPSupport.rst:222
#: ../../../OpenMPSupport.rst:246
msgid ":none:`unclaimed`"
msgstr ""

#: ../../../OpenMPSupport.rst:192
msgid "nested target declare"
msgstr ""

#: ../../../OpenMPSupport.rst:192
msgid "D51378"
msgstr ""

#: ../../../OpenMPSupport.rst:194
msgid "implicitly map 'this' (this[:1])"
msgstr ""

#: ../../../OpenMPSupport.rst:194
msgid "D55982"
msgstr ""

#: ../../../OpenMPSupport.rst:196
msgid "allow access to the reference count (omp_target_is_present)"
msgstr ""

#: ../../../OpenMPSupport.rst:198
msgid "requires directive"
msgstr ""

#: ../../../OpenMPSupport.rst:198 ../../../OpenMPSupport.rst:202
msgid ":part:`partial`"
msgstr ""

#: ../../../OpenMPSupport.rst:200
msgid "clause: unified_shared_memory"
msgstr ""

#: ../../../OpenMPSupport.rst:200
msgid "D52625,D52359"
msgstr ""

#: ../../../OpenMPSupport.rst:202
msgid "clause: unified_address"
msgstr ""

#: ../../../OpenMPSupport.rst:204
msgid "clause: reverse_offload"
msgstr ""

#: ../../../OpenMPSupport.rst:204 ../../../OpenMPSupport.rst:234
msgid ":none:`unclaimed parts`"
msgstr ""

#: ../../../OpenMPSupport.rst:204
msgid "D52780"
msgstr ""

#: ../../../OpenMPSupport.rst:206
msgid "clause: atomic_default_mem_order"
msgstr ""

#: ../../../OpenMPSupport.rst:206
msgid "D53513"
msgstr ""

#: ../../../OpenMPSupport.rst:208
msgid "clause: dynamic_allocators"
msgstr ""

#: ../../../OpenMPSupport.rst:208
msgid ":part:`unclaimed parts`"
msgstr ""

#: ../../../OpenMPSupport.rst:208
msgid "D53079"
msgstr ""

#: ../../../OpenMPSupport.rst:210
msgid "user-defined mappers"
msgstr ""

#: ../../../OpenMPSupport.rst:210
msgid "D56326,D58638,D58523,D58074,D60972,D59474"
msgstr ""

#: ../../../OpenMPSupport.rst:212
msgid "mapping lambda expression"
msgstr ""

#: ../../../OpenMPSupport.rst:212
msgid "D51107"
msgstr ""

#: ../../../OpenMPSupport.rst:214
msgid "clause: use_device_addr for target data"
msgstr ""

#: ../../../OpenMPSupport.rst:216
msgid "support close modifier on map clause"
msgstr ""

#: ../../../OpenMPSupport.rst:216
msgid "D55719,D55892"
msgstr ""

#: ../../../OpenMPSupport.rst:218
msgid "teams construct on the host device"
msgstr ""

#: ../../../OpenMPSupport.rst:218
msgid "Clang part is done, r371553."
msgstr ""

#: ../../../OpenMPSupport.rst:220
msgid "support non-contiguous array sections for target update"
msgstr ""

#: ../../../OpenMPSupport.rst:222
msgid "pointer attachment"
msgstr ""

#: ../../../OpenMPSupport.rst:224
msgid "atomic extension"
msgstr ""

#: ../../../OpenMPSupport.rst:224
msgid "hints for the atomic construct"
msgstr ""

#: ../../../OpenMPSupport.rst:224
msgid "D51233"
msgstr ""

#: ../../../OpenMPSupport.rst:226 ../../../OpenMPSupport.rst:228
#: ../../../OpenMPSupport.rst:230
msgid "base language"
msgstr ""

#: ../../../OpenMPSupport.rst:226
msgid "C11 support"
msgstr ""

#: ../../../OpenMPSupport.rst:228
msgid "C++11/14/17 support"
msgstr ""

#: ../../../OpenMPSupport.rst:230
msgid "lambda support"
msgstr ""

#: ../../../OpenMPSupport.rst:232 ../../../OpenMPSupport.rst:234
#: ../../../OpenMPSupport.rst:236 ../../../OpenMPSupport.rst:238
#: ../../../OpenMPSupport.rst:240 ../../../OpenMPSupport.rst:242
#: ../../../OpenMPSupport.rst:244 ../../../OpenMPSupport.rst:246
#: ../../../OpenMPSupport.rst:248 ../../../OpenMPSupport.rst:265
#: ../../../OpenMPSupport.rst:267
msgid "misc extension"
msgstr ""

#: ../../../OpenMPSupport.rst:232
msgid "array shaping"
msgstr ""

#: ../../../OpenMPSupport.rst:232
msgid "D74144"
msgstr ""

#: ../../../OpenMPSupport.rst:234
msgid "library shutdown (omp_pause_resource[_all])"
msgstr ""

#: ../../../OpenMPSupport.rst:234
msgid "D55078"
msgstr ""

#: ../../../OpenMPSupport.rst:236
msgid "metadirectives"
msgstr ""

#: ../../../OpenMPSupport.rst:238
msgid "conditional modifier for lastprivate clause"
msgstr ""

#: ../../../OpenMPSupport.rst:240
msgid "iterator and multidependences"
msgstr ""

#: ../../../OpenMPSupport.rst:242
msgid "depobj directive and depobj dependency kind"
msgstr ""

#: ../../../OpenMPSupport.rst:244
msgid "user-defined function variants"
msgstr ""

#: ../../../OpenMPSupport.rst:244
msgid "D67294, D64095, D71847, D71830"
msgstr ""

#: ../../../OpenMPSupport.rst:246
msgid "pointer/reference to pointer based array reductions"
msgstr ""

#: ../../../OpenMPSupport.rst:248
msgid "prevent new type definitions in clauses"
msgstr ""

#: ../../../OpenMPSupport.rst:250
msgid "memory model extension"
msgstr ""

#: ../../../OpenMPSupport.rst:250
msgid "memory model update (seq_cst, acq_rel, release, acquire,...)"
msgstr ""

#: ../../../OpenMPSupport.rst:255
msgid "OpenMP 5.1 Implementation Details"
msgstr ""

#: ../../../OpenMPSupport.rst:257
msgid ""
"The following table provides a quick overview over various OpenMP 5.1 "
"features and their implementation status, as defined in the technical report "
"8 (TR8). Please contact *openmp-dev* at *lists.llvm.org* for more "
"information or if you want to help with the implementation."
msgstr ""

#: ../../../OpenMPSupport.rst:265
msgid "user-defined function variants with #ifdef protection"
msgstr ""

#: ../../../OpenMPSupport.rst:265
msgid "D71179"
msgstr ""

#: ../../../OpenMPSupport.rst:267
msgid "default(firstprivate) & default(private)"
msgstr ""

#: ../../../OpenMPSupport.rst:269
msgid "Loop tiling transformation"
msgstr ""

#: ../../../OpenMPSupport.rst:269 ../../../OpenMPSupport.rst:271
msgid ":part:`claimed`"
msgstr ""

#: ../../../OpenMPSupport.rst:271
msgid "'present' map type modifier"
msgstr ""
